name: Git Submodule Management

on:
  workflow_dispatch:
  push:
    branches:
      - exitb
      
    inputs:
      repoPath:
        description: 'Path to the repository'
        required: true
        default: 'exit-5'
        type: string
      submoduleUrl:
        description: 'URL of the submodule to add'
        required: true
        default: 'https://github.com/automate-1/exit-3.git'
        type: string
      submoduleCommit:
        description: 'Commit hash for the submodule (required to checkout specific version)'
        required: false
        default: '0e6de18'
        type: string
      action:
        description: 'Choose an action from 1 to 6 (1=add, 2=remove, 3=init, 4=update, 5=sync, 6=checkout commit)'
        required: true
        default: '2'
        type: string
      submodulePath:
        description: 'Path of the submodule for action (required for specific actions)'
        required: true
        default: 'exit-3'
        type: string

jobs:
  submodule-management:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository specified by repoPath
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          repository: ${{ inputs.repoPath }}
          ref: main

      - name: Set up GitHub Token for Authentication
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git config --global credential.helper store
          echo "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com" > ~/.git-credentials


      - name: Debug Information
        run: |
          echo "Action: ${{ inputs.action }}"
          echo "Submodule URL: ${{ inputs.submoduleUrl }}"
          echo "Submodule Path: ${{ inputs.submodulePath }}"
          echo "Submodule Commit: ${{ inputs.submoduleCommit }}"
          git status
          cat .gitmodules || echo ".gitmodules file not found"

      # Add Submodule (if action is '1')
      - name: Add Submodule
        if: ${{ inputs.action == '1' }}
        run: |
          git submodule add ${{ inputs.submoduleUrl }} ${{ inputs.submodulePath }}
          git submodule update --init --recursive ${{ inputs.submodulePath }}
          ls -la ${{ inputs.submodulePath }}

      # Remove Submodule (if action is '2')
      - name: Remove Submodule
        if: ${{ inputs.action == '2' }}
        run: |
          git submodule deinit -f ${{ inputs.submodulePath }}
          git rm -f ${{ inputs.submodulePath }}
          rm -rf .git/modules/${{ inputs.submodulePath }}
          ls -la ${{ inputs.submodulePath }} || echo "Submodule path removed"

      # Initialize Submodule (if action is '3')
      - name: Initialize Submodule
        if: ${{ inputs.action == '3' }}
        run: |
          git submodule update --init --recursive ${{ inputs.submodulePath }}
          ls -la ${{ inputs.submodulePath }}

      # Update Submodule (if action is '4')
      - name: Update Submodule
        if: ${{ inputs.action == '4' }}
        run: |
          git submodule update --recursive --remote ${{ inputs.submodulePath }}
          if [ ! -z "${{ inputs.submoduleCommit }}" ]; then
            cd ${{ inputs.submodulePath }}
            git checkout ${{ inputs.submoduleCommit }}
            cd -
          fi
          ls -la ${{ inputs.submodulePath }}

      # Sync Submodule (if action is '5')
      - name: Sync Submodule
        if: ${{ inputs.action == '5' }}
        run: |
          git submodule sync ${{ inputs.submodulePath }}
          ls -la ${{ inputs.submodulePath }}

      # Checkout specific commit for Submodule (if action is '6')
      - name: Checkout Commit for Submodule
        if: ${{ inputs.action == '6' }}
        run: |
          git submodule update --init --recursive ${{ inputs.submodulePath }}
          cd ${{ inputs.submodulePath }}
          git checkout ${{ inputs.submoduleCommit }}
          cd -
          ls -la ${{ inputs.submodulePath }}

      # Commit and push the changes
      - name: Commit Changes
        run: |
          git status
          git add .gitmodules || true
          git add ${{ inputs.submodulePath }} || true
          git add . # Fallback to add all changes
          if [[ -n $(git status -s) ]]; then
            git commit -m "Updated submodule for ${{ inputs.submodulePath }} with action ${{ inputs.action }}"
            git push origin HEAD:main
          else
            echo "No changes to commit"
          fi
     
