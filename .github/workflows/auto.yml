name: Git Submodule Management

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Numeric action to perform (1=add, 2=remove, 3=init, 4=update, 5=sync)'
        required: true
        default: '4'
        type: string
      submodule_path:
        description: 'Path to the submodule (e.g., path/to/submodule)'
        required: true
        type: string
      repository_url:
        description: 'URL of the repository for add action (e.g., https://github.com/username/repository.git)'
        required: true
        type: string
      commit_hash:
        description: 'Commit hash to use for the update action (e.g., abcdef1234567890)'
        required: false
        type: string

jobs:
  submodule-management:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Initialize or Update Submodule (if action is '3' (init) or '4' (update))
      - name: Initialize or Update Submodule
        if: ${{ inputs.action == '3' || inputs.action == '4' }}
        run: |
          git submodule update --init --recursive ${{ inputs.submodule_path }}
          if [ "${{ inputs.action }}" == "4" ]; then
            git submodule update --recursive --remote ${{ inputs.submodule_path }}
            if [ ! -z "${{ inputs.commit_hash }}" ]; then
              git checkout ${{ inputs.commit_hash }} ${{ inputs.submodule_path }}
            fi
          fi

      # Sync Submodule (if action is '5')
      - name: Sync Submodule
        if: ${{ inputs.action == '5' }}
        run: |
          git submodule sync ${{ inputs.submodule_path }}

      # Add a new submodule (if action is '1')
      - name: Add Submodule
        if: ${{ inputs.action == '1' }}
        run: |
          git submodule add ${{ inputs.repository_url }} ${{ inputs.submodule_path }}
          git submodule update --init --recursive ${{ inputs.submodule_path }}

      # Remove a submodule (if action is '2')
      - name: Remove Submodule
        if: ${{ inputs.action == '2' }}
        run: |
          git submodule deinit -f ${{ inputs.submodule_path }}
          git rm -f ${{ inputs.submodule_path }}
          rm -rf .git/modules/${{ inputs.submodule_path }}
          git commit -m "Remove submodule at ${{ inputs.submodule_path }}"

      # Commit and push the changes
      - name: Commit Changes
        run: |
          git add .gitmodules
          git add ${{ inputs.submodule_path }}
          git commit -m "Updated submodule for ${{ inputs.submodule_path }} with action ${{ inputs.action }}"
          git push
