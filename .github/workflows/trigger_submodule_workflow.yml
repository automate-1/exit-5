name: Handle Submodule Actions

on:
  repository_dispatch:
    types: [submodule_action]  # This matches the event type in the source repository

jobs:
  manage-submodules:
    runs-on: windows-latest

    steps:
      - name: Checkout target repository
        uses: actions/checkout@v3

      - name: Manage submodules in target repo
        shell: pwsh
        run: |
          # Set variables from the dispatched event
          $repoPath = "${{ github.event.client_payload.repoPath }}"
          $submoduleUrl = "${{ github.event.client_payload.submoduleUrl }}"
          $submoduleCommit = "${{ github.event.client_payload.submoduleCommit }}"
          $action = "${{ github.event.client_payload.action }}"
          $submodulePath = "${{ github.event.client_payload.submodulePath }}"

          Write-Output "Performing submodule actions in the target repository..."

          # Example logic for managing submodules
          if ($submoduleUrl -ne "") {
              git submodule add $submoduleUrl
              git submodule update --init --recursive
              git add .
              git commit -m "Added submodule: $submoduleUrl"
              git push origin main
          }

          if ($submoduleCommit -ne "") {
              Set-Location -Path $submodulePath
              git checkout $submoduleCommit
              git submodule update --recursive
              Write-Output "Checked out submodule at commit: $submoduleCommit"
          }

          # Perform specific action based on input
          switch ($action) {
              "1" {
                  git submodule update --init --recursive $submodulePath
                  Write-Output "$submodulePath submodule has been initialized."
              }
              "2" {
                  git submodule update --remote $submodulePath
                  Write-Output "$submodulePath submodule has been updated."
              }
              "3" {
                  git add $submodulePath
                  git commit -m "Updated submodule: $submodulePath"
                  git push origin main
              }
              default {
                  Write-Output "Invalid action selected."
              }
          }


