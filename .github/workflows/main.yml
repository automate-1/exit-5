
name: Manage Submodules
on:
  workflow_dispatch:
  push:
    branches:
      - main

    inputs:
      repoPath:
        description: 'Path to the repository'
        required: true
        default: '.'
      submoduleUrl:
        description: 'URL of the submodule to add'
        required: false
        default: ''
      action:
        description: 'Choose an action from 1 to 6'
        required: true
        default: '1'
      submodulePath:
        description: 'Path of the submodule for action (required for specific actions)'
        required: false
        default: ''
      commitHash:
        description: 'Specific commit hash for the submodule (for update to a specific commit)'
        required: false
        default: ''

jobs:
  manage-submodules:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true  # Fetch submodules if they exist

      - name: Manage submodules
        shell: pwsh
        run: |
          # Set variables from workflow inputs
          $repoPath = "${{ github.event.inputs.repoPath }}"
          $submoduleUrl = "${{ github.event.inputs.submoduleUrl }}"
          $action = "${{ github.event.inputs.action }}"
          $submodulePath = "${{ github.event.inputs.submodulePath }}"
          $commitHash = "${{ github.event.inputs.commitHash }}"

          # Navigate to the target repository
          Set-Location -Path $repoPath
          Write-Output "Changed directory to $repoPath"

          # Add submodule if URL is provided
          if ($submoduleUrl -ne "") {
              git submodule add $submoduleUrl
              git submodule update --init --recursive
              git add .
              git commit -m "Added submodule: $submoduleUrl"
              git push origin main
              Write-Output "Added submodule at $submoduleUrl"
          }

          # Perform action based on input
          switch ($action) {
              "1" {
                  git submodule update --init --recursive $submodulePath
                  Write-Output "$submodulePath submodule has been initialized."
              }
              "2" {
                  if ($commitHash -ne "") {
                      cd $submodulePath
                      git fetch
                      git checkout $commitHash
                      cd ..
                      Write-Output "$submodulePath submodule updated to specific commit $commitHash."
                  }
                  else {
                      git submodule update --remote $submodulePath
                      Write-Output "$submodulePath submodule updated to the latest commit."
                  }
              }
              "3" {
                  git add $submodulePath
                  git commit -m "Updated specific submodule: $submodulePath"
                  git push origin main
                  Write-Output "Updates for $submodulePath submodule have been committed and pushed."
              }
              "4" {
                  git submodule sync --recursive $submodulePath
                  Write-Output "$submodulePath submodule URL has been synced."
              }
              "5" {
                  git submodule deinit $submodulePath
                  git rm -r --cached $submodulePath
                  git commit -m "Removed submodule at $submodulePath"
                  git push origin main
                  Write-Output "$submodulePath submodule has been removed."
              }
              "6" {
                  git submodule add $submoduleUrl $submodulePath
                  git commit -m "Re-added submodule at $submodulePath"
                  git push origin main
                  Write-Output "Submodule added at $submodulePath."
              }
              default {
                  Write-Output "Invalid action. Please select a valid number between 1 and 6."
              }
          }
